---
import fg from 'fast-glob';
import siteConfig from '../../data/site-config';
import ImageGrid from '../../components/ImageGrid.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';
import PageHeader from '../../components/PageHeader.astro';
import GoBack from '../../components/GoBack.astro';

export const prerender = true;
export function getStaticPaths() {
  return [
    { params: { slug: 'pregnancy' } },
    { params: { slug: 'temp' } },
    { params: { slug: 'newborn' } },
    { params: { slug: 'family' } },
    { params: { slug: 'woman' } },
  ];
}

const { slug } = Astro.params; // Get the slug from the URL
const allImages: string[] = fg.sync(`public/images/portfolio/${slug}/**/*.jpg`, { onlyFiles: true });

type Accumulator = Record<string, string[]>;
const reduceByFolders = (acc: Accumulator, image: string): Accumulator => {
  const split = image.split('/');
  split.pop();
  const key = split.join('/');
  if (Array.isArray(acc[key])) {
    acc[key].push(image);
  } else {
    acc[key] = [image];
  }
  return acc;
};

const objOfImages = allImages
  .map((src) => `/${src.split('public/')[1]}`)
  .reverse()
  .reduce(reduceByFolders, {});

const title = siteConfig.dictionaries.title[slug] || 'temp';
---

<BaseLayout description={siteConfig.description} image={siteConfig.image} showHeader={false}>
  <PageHeader title={title} />
  <GoBack text={siteConfig.dictionaries.title.portfolio} href={siteConfig.dictionaries.href.portfolio} />
  {
    Object.keys(objOfImages)
      .sort()
      .reverse()
      .map((key) => <ImageGrid images={objOfImages[key]} />)
  }

  <GoBack text={siteConfig.dictionaries.title.portfolio} href={siteConfig.dictionaries.href.portfolio} />
</BaseLayout>
